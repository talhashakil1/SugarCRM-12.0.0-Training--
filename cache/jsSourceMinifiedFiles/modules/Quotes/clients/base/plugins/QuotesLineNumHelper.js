(function(app){app.events.on('app:init',function(){app.plugins.register('QuotesLineNumHelper',['view'],{lineNumFieldDef:undefined,hasLineNumField:undefined,lineNumGroupIdMap:undefined,showLineNums:undefined,onAttach:function(component,plugin){this.once('init',function(){var ctx;if(this.model.module==='Quotes'){ctx=this.context;}else{ctx=this.context.parent;this.layout.on('quotes:line_nums:reset',this.resetGroupLineNumbers,this);}
ctx.on('quotes:show_line_nums:changed',this.onShowLineNumsChanged,this);this.lineNumFieldDef=_.find(this._fields,function(field){return field.name==='line_num';});this._fields=_.reject(this._fields,function(field){return field.name==='line_num';});this.hasLineNumField=false;this.showLineNums=false;this.lineNumGroupIdMap={};if(ctx.has('model')&&ctx.get('model').has('show_line_nums')){this.onShowLineNumsChanged(ctx.get('model').get('show_line_nums'),false);}},this);},onDetach:function(component,plugin){var ctx;if(this.model.module==='Quotes'){ctx=this.context;}else{ctx=this.context.parent;this.layout.off('quotes:line_nums:reset',this.resetGroupLineNumbers,this);}
if(ctx){ctx.off('quotes:show_line_nums:changed',this.onShowLineNumsChanged,this);}
this.lineNumGroupIdMap=undefined;},onShowLineNumsChanged:function(showLineNums,doRender){var changed=false;var isBundle=this.model.module==='ProductBundles'&&this.collection.length;this.showLineNums=showLineNums;doRender=_.isUndefined(doRender)?true:false;if(this.showLineNums&&!this.hasLineNumField){this._addLineNumFieldDef();if(isBundle){this._addLineNumToModel(this.model.cid,this.collection);}
changed=true;}else if(!this.showLineNums&&this.hasLineNumField){this._removeLineNumFieldDef();if(isBundle){this._removeLineNumFromModel(this.model.cid,this.collection);}
changed=true;}
if(changed&&doRender){this.render();}},getGroupLineNumCount:function(groupId){this._checkAddGroupToMap(groupId);return this.lineNumGroupIdMap[groupId];},resetGroupLineNumbers:function(groupId,collection){var groupLineNumObj;if(!this.showLineNums){return;}
groupId=groupId||this.model.cid;collection=collection||this.collection;this._checkAddGroupToMap(groupId);groupLineNumObj=this.lineNumGroupIdMap[groupId];groupLineNumObj.ct=1;_.each(collection.models,_.bind(function(groupLineNumObj,model){if(model.module==='Products'){model.set('line_num',groupLineNumObj.ct++);}},this,groupLineNumObj),this);},_checkAddGroupToMap:function(groupId){if(!this.lineNumGroupIdMap[groupId]){this.lineNumGroupIdMap[groupId]={ct:1};}},_checkRemoveGroupFromMap:function(groupId){if(this.lineNumGroupIdMap[groupId].ct<1){delete this.lineNumGroupIdMap[groupId];}},_addLineNumFieldDef:function(){this._fields.unshift(this.lineNumFieldDef);this.hasLineNumField=true;},_removeLineNumFieldDef:function(){this._fields=_.reject(this._fields,function(field){return field.name==='line_num';});this.hasLineNumField=false;},_addLineNumToModel:function(groupId,collection){this._checkAddGroupToMap(groupId);_.each(collection.models,_.bind(function(groupId,model){if(model.module==='Products'){model.set('line_num',this.lineNumGroupIdMap[groupId].ct++);}},this,groupId),this);},_removeLineNumFromModel:function(groupId,collection){_.each(collection.models,_.bind(function(groupId,model){if(model.module==='Products'){model.unset('line_num');this.lineNumGroupIdMap[groupId].ct--;}},this,groupId),this);this._checkRemoveGroupFromMap(groupId);}});});})(SUGAR.App);