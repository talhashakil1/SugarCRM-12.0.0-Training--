(function(app){app.events.on('app:init',function(){app.plugins.register('QuotesViewSaveHelper',['view'],{hasUnsavedQuoteChanges:function(){var modelDefaults;var differenceKeys;var hasUnsavedChanges;var currentNoEditFields=this.noEditFields;this.noEditFields=this.noEditFields.concat(this.calculatedFields,['bundles']);this.noEditFields=this.noEditFields.concat(this.noEditFields,this._getIgnoredTaxRateFields());hasUnsavedChanges=this._super('hasUnsavedChanges');if(hasUnsavedChanges){modelDefaults=this.model.getDefault()||{};differenceKeys=_.difference(_.keys(this.model.attributes),_.keys(modelDefaults));if(differenceKeys.length){differenceKeys=_.difference(differenceKeys,this.noEditFields);if(!differenceKeys.length){hasUnsavedChanges=false;}}}
if(hasUnsavedChanges===false&&this.type!='create'){hasUnsavedChanges=this.hasUnsavedBundleChanges();}
this.noEditFields=currentNoEditFields;return hasUnsavedChanges;},hasUnsavedBundleChanges:function(){var bundleCalculatedFields;var changedBundle;var itemCalculatedFields={};var bundles=this.model.get('bundles');var changedFields=function(model){return model.changedAttributes(model.getSynced());};var unsavedBundles=_.find(bundles.models,function(model){return model.isNew();});if(this.context.get('create')===true&&bundles.length>1&&unsavedBundles){return true;}
changedBundle=bundles.find(function(bundle){var bundleChanged;var items;var changedItem;var keysToOmit;var changedFieldsList;if(_.isUndefined(bundleCalculatedFields)){bundleCalculatedFields=_.chain(bundle.fields).where({calculated:true}).pluck('name').value();}
keysToOmit=['product_bundle_items','_justSaved'].concat(bundleCalculatedFields);bundleChanged=!_.isEmpty(_.omit(changedFields(bundle),keysToOmit));if(bundleChanged===false&&bundle.has('product_bundle_items')){items=bundle.get('product_bundle_items');changedItem=items.find(function(item){if(item.isNew()){return true;}
if(_.isUndefined(itemCalculatedFields[item.module])){itemCalculatedFields[item.module]=_.chain(item.fields).where({calculated:true}).pluck('name').value();}
changedFieldsList=changedFields(item);changedFieldsList=_.omit(changedFieldsList,'_-rel_exp_values','position');return!_.isEmpty(_.omit(changedFieldsList,itemCalculatedFields[item.module]));});bundleChanged=!_.isUndefined(changedItem);}
return bundleChanged;},this);return!_.isUndefined(changedBundle);},_getIgnoredTaxRateFields:function(){if(_.isEmpty(this.defaultTaxRateValues)){return[];}
return Object.keys(this.defaultTaxRateValues).filter(taxRateAttr=>{return this.model.get(taxRateAttr)===this.defaultTaxRateValues[taxRateAttr];});}});});})(SUGAR.App);