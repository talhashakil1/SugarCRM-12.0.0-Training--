var AdamContainerDropBehavior=function(selectors){jCore.ContainerDropBehavior.call(this,selectors);};AdamContainerDropBehavior.prototype=new jCore.ContainerDropBehavior();AdamContainerDropBehavior.prototype.type="AdamContainerDropBehavior";AdamContainerDropBehavior.prototype.dropHook=function(shape,e,ui){var id=ui.draggable.attr('id'),result,droppedElement=shape.canvas.customShapes.find('id',id);if(droppedElement.type==='AdamEvent'&&droppedElement.getEventType()==='BOUNDARY'){droppedElement.setPosition(droppedElement.oldX,droppedElement.oldY);result=false;}else{result=true;}
return result;};AdamContainerDropBehavior.prototype.onDrop=function(shape){return function(e,ui){var customShape,canvas=shape.getCanvas(),selection,sibling,i,command,coordinates,id,shapesAdded=[],mp,containerBehavior=shape.containerBehavior;if(canvas.readOnly){return false;}
shape.entered=false;if(ui.helper&&ui.helper.attr('id')==="drag-helper"){return false;}
id=ui.draggable.attr('id');customShape=canvas.toolBarShapeFactory(id);if(customShape===null){customShape=canvas.customShapes.find('id',id);if(!customShape||!shape.dropBehavior.dropHook(shape,e,ui)){return false;}
if(!(customShape.parent&&customShape.parent.id===shape.id)){selection=canvas.currentSelection;for(i=0;i<selection.getSize();i+=1){sibling=selection.get(i);coordinates=jCore.Utils.getPointRelativeToPage(sibling);coordinates=jCore.Utils.pageCoordinatesToShapeCoordinates(shape,null,coordinates.x,coordinates.y);shapesAdded.push({shape:sibling,container:shape,x:coordinates.x,y:coordinates.y,topLeft:false});}
command=new jCore.CommandSwitchContainer(shapesAdded);command.execute();canvas.commandStack.add(command);canvas.multipleDrop=true;}
shape.updateDimensions(10);canvas.updatedElement=null;}else{e.pageX=e.pageX||e.originalEvent.pageX;e.pageY=e.pageY||e.originalEvent.pageY;coordinates=jCore.Utils.pageCoordinatesToShapeCoordinates(shape,e);if(!canvas.validatePositions(customShape,coordinates)){mp=new MessagePanel({title:'Error',wtype:'Error',message:translate('LBL_PMSE_MESSAGE_CANNOTDROPOUTSIDECANVAS')});mp.show();return false;}
shape.addElement(customShape,coordinates.x,coordinates.y,customShape.topLeftOnCreation);customShape.attachListeners();canvas.updatedElement=customShape;command=new jCore.CommandCreate(customShape);canvas.commandStack.add(command);command.execute();canvas.hideAllFocusedLabels();if(customShape.labels.get(0)){customShape.labels.get(0).getFocus();$('#'+customShape.labels.get(0).getID()).find('input').select();}}};};var AdamConnectionDropBehavior=function(selectors){jCore.ConnectionDropBehavior.call(this,selectors);};AdamConnectionDropBehavior.prototype=new jCore.ConnectionDropBehavior();AdamConnectionDropBehavior.prototype.type="AdamConnectionDropBehavior";AdamConnectionDropBehavior.prototype.basicRules={AdamEvent:{AdamEvent:{connection:'regular',type:'SEQUENCE'},AdamActivity:{connection:'regular',type:'SEQUENCE'}},AdamActivity:{AdamActivity:{connection:'regular',type:'SEQUENCE'},AdamArtifact:{connection:'dotted',destDecorator:'con_none',type:'ASSOCIATION'},AdamIntermediateEvent:{connection:'regular',type:'SEQUENCE'},AdamEndEvent:{connection:'regular',type:'SEQUENCE'},AdamGateway:{connection:'regular',type:'SEQUENCE'}},AdamStartEvent:{AdamActivity:{connection:'regular',type:'SEQUENCE'},AdamIntermediateEvent:{connection:'regular',type:'SEQUENCE'},AdamEndEvent:{connection:'regular',type:'SEQUENCE'},AdamGateway:{connection:'regular',type:'SEQUENCE'}},AdamIntermediateEvent:{AdamActivity:{connection:'regular',type:'SEQUENCE'},AdamIntermediateEvent:{connection:'regular',type:'SEQUENCE'},AdamEndEvent:{connection:'regular',type:'SEQUENCE'},AdamGateway:{connection:'regular',type:'SEQUENCE'}},AdamBoundaryEvent:{AdamActivity:{connection:'regular',type:'SEQUENCE'},AdamIntermediateEvent:{connection:'regular',type:'SEQUENCE'},AdamEndEvent:{connection:'regular',type:'SEQUENCE'},AdamGateway:{connection:'regular',type:'SEQUENCE'}},AdamGateway:{AdamActivity:{connection:'regular',type:'SEQUENCE'},AdamIntermediateEvent:{connection:'regular',type:'SEQUENCE'},AdamEndEvent:{connection:'regular',type:'SEQUENCE'},AdamGateway:{connection:'regular',type:'SEQUENCE'}},AdamArtifact:{AdamActivity:{connection:'dotted',destDecorator:'con_none',type:'ASSOCIATION'}}};AdamConnectionDropBehavior.prototype.initRules={AdamCanvas:{AdamCanvas:{name:'AdamCanvas to AdamCanvas',rules:AdamConnectionDropBehavior.prototype.basicRules}},AdamActivity:{AdamCanvas:{name:'AdamActivity to AdamCanvas',rules:AdamConnectionDropBehavior.prototype.basicRules}}};AdamConnectionDropBehavior.prototype.dropStartHook=function(shape,e,ui){shape.srcDecorator=null;shape.destDecorator=null;var draggableId=ui.draggable.attr("id"),source=shape.canvas.customShapes.find('id',draggableId),prop;if(source){prop=this.validate(source,shape);if(prop){shape.setConnectionType({type:prop.type,segmentStyle:prop.connection,srcDecorator:prop.srcDecorator,destDecorator:prop.destDecorator});return true;}else{if(typeof source!=='undefined'){if(!(ui.helper&&ui.helper.attr('id')==="drag-helper")){return false;}
shape.setConnectionType('none');}}}
return true;};AdamConnectionDropBehavior.prototype.validate=function(source,target){var sType,tType,rules,initRules,initRulesName,BPMNAuxMap={AdamEvent:{'START':'AdamStartEvent','END':'AdamEndEvent','INTERMEDIATE':'AdamIntermediateEvent','BOUNDARY':'AdamBoundaryEvent'},bpmnArtifact:{'TEXTANNOTATION':'bpmnAnnotation'}};if(source&&target){if(source.getID()===target.getID()){return false;}
if(this.initRules[source.getParent().getType()]&&this.initRules[source.getParent().getType()][target.getParent().getType()]){initRules=this.initRules[source.getParent().getType()][target.getParent().getType()].rules;initRulesName=this.initRules[source.getParent().getType()][target.getParent().getType()].name;sType=source.getType();tType=target.getType();if(sType==='AdamEvent'){if(BPMNAuxMap[sType]&&BPMNAuxMap[sType][source.getEventType()]){sType=BPMNAuxMap[sType][source.getEventType()];}}
if(tType==='AdamEvent'){if(BPMNAuxMap[tType]&&BPMNAuxMap[tType][target.getEventType()]){tType=BPMNAuxMap[tType][target.getEventType()];}}
if(initRules[sType]&&initRules[sType][tType]){rules=initRules[sType][tType];}else{rules=false;}
if(initRules){switch(initRulesName){case'bpmnPool to bpmnPool':if(source.getParent().getID()!==target.getParent().getID()){rules=false;}
break;case'bpmnLane to bpmnLane':if(source.getFirstPool(source.parent).getID()!==target.getFirstPool(target.parent).getID()){if(this.extraRules[sType]&&this.extraRules[sType][tType]){rules=this.extraRules[sType][tType];}else{rules=false;}}
break;case'bpmnActivity to bpmnLane':if(this.basicRules[sType]&&this.basicRules[sType][tType]){rules=this.basicRules[sType][tType];}else{rules=false;}
break;default:break;}}else{rules=false;}
return rules;}else{sType=source.getType();tType=target.getType();if(sType==='AdamEvent'){if(BPMNAuxMap[sType]&&BPMNAuxMap[sType][source.getEventType()]){sType=BPMNAuxMap[sType][source.getEventType()];}}
if(tType==='AdamEvent'){if(BPMNAuxMap[tType]&&BPMNAuxMap[tType][target.getEventType()]){tType=BPMNAuxMap[tType][target.getEventType()];}}
if(this.advancedRules[sType]&&this.advancedRules[sType][tType]){rules=this.advancedRules[sType][tType];}else{rules=false;}
return rules;}}};AdamConnectionDropBehavior.prototype.onDrop=function(shape){var that=this;return function(e,ui){var canvas=shape.getCanvas(),id=ui.draggable.attr('id'),x,y,currLeft,currTop,startPoint,sourceShape,sourcePort,endPort,endPortXCoord,endPortYCoord,connection,saveCon,currentConnection=canvas.currentConnection,srcPort,dstPort,port,success=false,command,aux,segmentMap,prop;shape.entered=false;if(!shape.dropBehavior.dropStartHook(shape,e,ui)){return false;}
if(shape.getConnectionType()==="none"){App.alert.show('warning_connection',{level:'warning',messages:translate('LBL_PMSE_MESSAGE_INVALID_CONNECTION'),autoClose:true,autoCloseDelay:9000});return true;}
if(currentConnection){srcPort=currentConnection.srcPort;dstPort=currentConnection.destPort;if(srcPort.id===id){port=srcPort;}else if(dstPort.id===id){port=dstPort;}else{port=null;}}
if(ui.helper&&ui.helper.attr('id')==="drag-helper"){startPoint=shape.canvas.connectionSegment.startPoint;sourceShape=shape.canvas.connectionSegment.pointsTo;if(sourceShape.parent&&sourceShape.parent.id===shape.id){return true;}
sourceShape.setPosition(sourceShape.oldX,sourceShape.oldY);startPoint.x-=sourceShape.absoluteX;startPoint.y-=sourceShape.absoluteY;sourcePort=new jCore.Port({width:10,height:10});endPort=new jCore.Port({width:10,height:10});endPortXCoord=ui.offset.left-shape.canvas.getX()-
shape.getAbsoluteX()+shape.canvas.getLeftScroll();endPortYCoord=ui.offset.top-shape.canvas.getY()-
shape.getAbsoluteY()+shape.canvas.getTopScroll();sourceShape.addPort(sourcePort,startPoint.x,startPoint.y);shape.addPort(endPort,endPortXCoord,endPortYCoord,false,sourcePort);connection=new AdamFlow({srcPort:sourcePort,destPort:endPort,canvas:shape.canvas,segmentStyle:shape.connectionType.segmentStyle,flo_type:shape.connectionType.type});connection.setSrcDecorator(new jCore.ConnectionDecorator({width:11,height:11,canvas:canvas,decoratorPrefix:(typeof shape.connectionType.srcDecorator!=='undefined'&&shape.connectionType.srcDecorator!==null)?shape.connectionType.srcDecorator:"adam-decorator",decoratorType:"source",parent:connection}));connection.setDestDecorator(new jCore.ConnectionDecorator({width:11,height:11,canvas:canvas,decoratorPrefix:(typeof shape.connectionType.destDecorator!=='undefined'&&shape.connectionType.destDecorator!==null)?shape.connectionType.destDecorator:"adam-decorator",decoratorType:"target",parent:connection}));connection.canvas.commandStack.add(new jCore.CommandConnect(connection));connection.connect();connection.setSegmentMoveHandlers();canvas.addConnection(connection);connection.setTargetShape(endPort.parent);connection.setOriginShape(sourcePort.parent);connection.savePoints();sourcePort.attachListeners(sourcePort);endPort.attachListeners(endPort);if(canvas.zoomFactor!=1){saveCon=_.extend({},connection);_.each(saveCon.points,function(point){point.x /=canvas.zoomFactor;point.y /=canvas.zoomFactor;});}else{saveCon=connection;}
canvas.triggerCreateEvent(saveCon,[]);}else if(port){port.setOldParent(port.getParent());port.setOldX(port.getX());port.setOldY(port.getY());x=ui.position.left;y=ui.position.top;port.setPosition(x,y);shape.dragging=false;if(shape.getID()!==port.parent.getID()){port.parent.removePort(port);currLeft=ui.offset.left-canvas.getX()-
shape.absoluteX+shape.canvas.getLeftScroll();currTop=ui.offset.top-canvas.getY()-
shape.absoluteY+shape.canvas.getTopScroll();shape.addPort(port,currLeft,currTop,true);canvas.regularShapes.insert(port);}else{shape.definePortPosition(port,port.getPoint(true));}
port.connection.connect();canvas.triggerPortChangeEvent(port);port.connection.disconnect();command=new jCore.CommandReconnect(port);port.canvas.commandStack.add(command);connection=port.getConnection();if(connection.srcPort.getID()===port.getID()){prop=AdamConnectionDropBehavior.prototype.validate(shape,connection.destPort.getParent());}else{prop=AdamConnectionDropBehavior.prototype.validate(connection.srcPort.getParent(),shape);}
if(prop){port.setOldParent(port.getParent());port.setOldX(port.getX());port.setOldY(port.getY());x=ui.position.left;y=ui.position.top;port.setPosition(x,y);shape.dragging=false;if(shape.getID()!==port.parent.getID()){port.parent.removePort(port);currLeft=ui.offset.left-canvas.getX()-
shape.absoluteX+shape.canvas.getLeftScroll();currTop=ui.offset.top-canvas.getY()-shape.absoluteY+
shape.canvas.getTopScroll();shape.addPort(port,currLeft,currTop,true);canvas.regularShapes.insert(port);}else{shape.definePortPosition(port,port.getPoint(true));}
aux={before:{condition:connection.flo_condition,type:connection.flo_type,segmentStyle:connection.segmentStyle,srcDecorator:connection.srcDecorator.getDecoratorPrefix(),destDecorator:connection.destDecorator.getDecoratorPrefix()},after:{type:prop.type,segmentStyle:prop.connection,srcDecorator:prop.srcDecorator,destDecorator:prop.destDecorator}};connection.connect();canvas.triggerPortChangeEvent(port);command=new AdamCommandReconnect(port,aux);command.execute();port.canvas.commandStack.add(command);}else{return false;}}
return false;};};var AdamConnectionContainerDropBehavior=function(options){AdamConnectionDropBehavior.call(this,options);};AdamConnectionContainerDropBehavior.prototype=new AdamConnectionDropBehavior();AdamConnectionContainerDropBehavior.prototype.type="AdamConnectionContainerDropBehavior";AdamConnectionContainerDropBehavior.prototype.defaultSelector=".custom_shape,.port";AdamConnectionContainerDropBehavior.prototype.onDrop=function(shape){return function(e,ui){if(!AdamConnectionDropBehavior.prototype.onDrop.call(this,shape)(e,ui)){AdamContainerDropBehavior.prototype.onDrop.call(this,shape)(e,ui);}};};AdamConnectionContainerDropBehavior.prototype.getSpecificType=AdamContainerDropBehavior.prototype.getSpecificType;AdamConnectionContainerDropBehavior.prototype.validDrop=AdamContainerDropBehavior.prototype.validDrop;AdamConnectionContainerDropBehavior.prototype.dropHook=AdamContainerDropBehavior.prototype.dropHook;