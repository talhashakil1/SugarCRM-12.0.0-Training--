(function register(app){app.events.on('app:init',function init(){function OpenUrl(def){this.def=def;}
OpenUrl.prototype.run=function(opts,currentExecution){let actionDef=this.def;let formula=actionDef.properties.formula;let url=actionDef.properties.url;if(app.utils.isTruthy(actionDef.properties.calculated)){this.getCalculatedUrl(opts,formula,currentExecution);}else{this.openWindowAndContinue(url,currentExecution);}};OpenUrl.prototype.getCalculatedUrl=function(opts,formula,currentExecution){let recordModel=opts.recordModel;const reqType='create';const url=app.api.buildURL('actionButton','evaluateCalculatedUrl');const reqMeta={keepTempFieldForCalculatedURL:{buildUrlTempField:{targetField:'buildUrlTempField',formula:formula}},recordType:recordModel.module,recordId:recordModel.get('id')};let apiCallbacks={success:function success(resp){const calculatedUrl=resp.buildUrlTempField.value;this.openWindowAndContinue(calculatedUrl,currentExecution);}.bind(this)};app.api.call(reqType,url,reqMeta,apiCallbacks);};OpenUrl.prototype.openWindowAndContinue=function(url,currentExecution){this.openNewWindow(url);currentExecution.nextAction();};OpenUrl.prototype.openNewWindow=function(url){const protocolRegex=/^([a-zA-Z]*):.*/gm;url=(url||'').trim();if(!url.match(protocolRegex)){url='https://'+url;}
var newWindow=window.open(url,'_blank');newWindow.focus();};app.actions=app.actions||{};app.actions=_.extend(app.actions,{OpenUrl:OpenUrl});});})(SUGAR.App);