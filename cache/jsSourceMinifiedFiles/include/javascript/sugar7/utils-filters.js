(function(app){app.events.on('app:init',function(){app.utils=_.extend(app.utils,{'FilterOptions':Backbone.Model.extend({initialize:function(options){this._filterPopulateNames=[];this._filterRelate=null;},setFilterRelate:function(value){if(!_.isObject(value)||_.isEmpty(value)){return this;}
this._filterRelate=value;this.set('stickiness',false);return this;},setFilterPopulate:function(value){if(!_.isObject(value)||_.isEmpty(value)){return this;}
this.set('filter_populate',value);this.set('stickiness',false);return this;},setInitialFilter:function(id){this.set('initial_filter',id);return this;},setInitialFilterLabel:function(name){this.set('initial_filter_label',name);return this;},setLangModules:function(modules){if(!_.isArray(modules)){return;}
this.set('initial_filter_lang_modules',modules);},relateInitialFilterLabel:function(){this.set('initial_filter_label',this._filterPopulateNames.join(', '));return this;},config:function(options){options=options||{};this.setInitialFilter(options.initial_filter);this.setInitialFilterLabel(options.initial_filter_label);this.setFilterPopulate(options.filter_populate);this.setFilterRelate(options.filter_relate);return this;},populateRelate:function(relateModel){if(_.isEmpty(this._filterRelate)){return this;}
var filterPopulate=this.get('filter_populate')||{};_.each(this._filterRelate,function(toField,fromField){filterPopulate[toField]=relateModel.get(fromField);var relateNameField=_.find(relateModel.fields,function(field){return field.id_name===fromField;});if(relateNameField){this._filterPopulateNames.push(relateModel.get(relateNameField.name));}},this);this.set('filter_populate',filterPopulate);if(!this.get('initial_filter_label')){this.relateInitialFilterLabel();}
return this;},format:function(){if(!this.get('initial_filter')||!this.get('filter_populate')){return;}
return this.toJSON();},keyValueFilterDef:function(key,value,fieldList){var isPredefinedFilter=(fieldList[key]&&fieldList[key].predefined_filter===true);if(key==='$or'){var keys=_.reduce(value,function(memo,obj){return memo.concat(_.keys(obj));},[]);key=_.find(_.keys(fieldList),function(key){if(_.has(fieldList[key],'dbFields')){return _.isEqual(fieldList[key].dbFields.sort(),keys.sort());}},this);value=_.values(value[0])[0];}else if(key==='$and'){var values=_.reduce(value,function(memo,obj){return _.extend(memo,obj);},{});var def=_.find(fieldList,function(fieldDef){return _.has(values,fieldDef.id_name||fieldDef.name);},this);var operator='$equals';key=def?def.name:key;if(def&&!_.isString(values[def.name])&&def.type==='currency'){operator=_.keys(values[def.name])[0];values[key]=values[key][operator];}
value={};value[operator]=values;}
if(!fieldList[key]){var relate=_.find(fieldList,function(field){return field.id_name===key;});if(!relate){return;}
key=relate.name;if(_.isString(value)||_.isNumber(value)){value={$in:[value]};}else if(_.keys(value)[0]==='$not_equals'){var val=_.values([value])[0];value={$not_in:val};}}else if(!fieldList[key]&&!isPredefinedFilter){return;}
if(_.isString(value)||_.isNumber(value)){value={$equals:value};}
return[key,value];}})});});})(SUGAR.App);