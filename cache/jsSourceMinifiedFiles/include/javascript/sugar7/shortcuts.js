(function(app){var bindShortcutKeys=function(keys,func,component){var wrapper=_.wrap(func,function(callback){var args=Array.prototype.slice.call(arguments,1);if(!component.disposed){callback.apply(component,args);}
return false;});Mousetrap.bind(keys,wrapper);};var unbindShortcutKeys=function(keys){Mousetrap.unbind(keys);};var getShortcutKey=function(id,keys){var shortcuts=app.user.getPreference('shortcuts');return(shortcuts&&shortcuts[id])?shortcuts[id]:keys;};var findCallOnFocus=function(shortcuts,key){var callOnFocus=false,shortcutKey=_.find(shortcuts,function(shortcut,id){return _.contains(getShortcutKey(id,shortcut.keys),key)});if(shortcutKey){callOnFocus=!!shortcutKey.callOnFocus;}
return callOnFocus;};var originalStopCallback=Mousetrap.stopCallback;Mousetrap.stopCallback=function(e,element,combo){var isInInputField=function(){return element.tagName==='INPUT'||element.tagName==='SELECT'||element.tagName==='TEXTAREA'||element.isContentEditable;};if(!app.shortcuts.isEnabled()){return true;}
if(isInInputField()&&app.shortcuts.shouldCallOnFocus(combo)){$(element).trigger('change');return false;}else{return originalStopCallback(e,element);}};app.events.on('app:login:success',function(){app.shortcuts.enable();});app.events.on('app:logout:success',function(){app.shortcuts.disable();});app.events.once('app:init',function(){app.before('app:view:change',function(){app.shortcuts.clearSession();return true;});});app.augment('shortcuts',{_currentSession:null,_savedSessions:[],_globalShortcuts:{},_enable:false,createSession:function(shortcutIds,layout){var self=this;this.clearSession();this._currentSession=new ShortcutSession(shortcutIds,layout);this._currentSession.activate();layout._dispose=_.wrap(layout._dispose,function(func){var args=Array.prototype.slice.call(arguments,1);func.apply(layout,args);self.deleteSavedSession(layout);});},clearSession:function(){if(this._currentSession){this._currentSession.deactivate();this._currentSession=null;}},register:function(shortcut,keys,func,component,callOnFocus){var session;if(_.isString(shortcut)){app.logger.warn('app.shortcuts.register(id, keys, func, component, callOnFocus) is deprecated and will be removed in 7.9. '+'Please use the app.shortcuts.register(shortcut) method signature.');shortcut={id:shortcut,keys:keys,handler:func,component:component,callOnFocus:callOnFocus};}
if(!_.isArray(shortcut.keys)){shortcut.keys=[shortcut.keys];}
if(this._isGlobalShortcutKey(shortcut.keys)){return;}
session=this._getShortcutSessionForComponent(shortcut.component);if(session){session.register(shortcut);}},registerGlobal:function(shortcut){if(!_.isArray(shortcut.keys)){shortcut.keys=[shortcut.keys];}
if(this._isGlobalShortcutKey(shortcut.keys)){return;}
this._globalShortcuts[shortcut.id]={keys:shortcut.keys,func:shortcut.handler,component:shortcut.component,description:shortcut.description};if(shortcut.callOnFocus){this._globalShortcuts[shortcut.id].callOnFocus=shortcut.callOnFocus;}
bindShortcutKeys(shortcut.keys,shortcut.handler,shortcut.component);},unregister:function(id,component){var session=this._getShortcutSessionForComponent(component);if(session){session.unregister(id);}},saveSession:function(){this._savedSessions.push(this._currentSession);this.clearSession();},restoreSession:function(){if(this._savedSessions.length===0){return;}
this.clearSession();this._currentSession=this._savedSessions.pop();if(!this._currentSession){return;}
if(this._currentSession.layout.disposed){this.restoreSession();}else{this._currentSession.activate();}},enable:function(){this._enable=true;},disable:function(){this._enable=false;},isEnabled:function(){return this._enable;},getCurrentSession:function(){return this._currentSession;},getLastSavedSession:function(){return _.last(this._savedSessions);},deleteSavedSession:function(layout){var savedSessionToDelete,savedSession;for(var index=0;index<this._savedSessions.length;index++){savedSession=this._savedSessions[index];if(savedSession&&savedSession.layout===layout){savedSessionToDelete=index;break;}}
if(!_.isUndefined(savedSessionToDelete)){this._savedSessions.splice(savedSessionToDelete,1);}},saveCustomShortcutKey:function(shortcuts,callback){var self=this,preferences;if(_.isEmpty(shortcuts)){callback();return;}
preferences=app.user.get('preferences');if(_.isEmpty(preferences.shortcuts)){preferences.shortcuts={};}
_.each(shortcuts,function(shortcut){if(this._isGlobalShortcutId(shortcut.id)){app.logger.error(shortcut.id+' is a global shortcut and cannot be customized.');}else{preferences.shortcuts[shortcut.id]=shortcut.keys;}},this);this.getCurrentSession().deactivate();app.user.updatePreferences(preferences,function(error){self.getCurrentSession().activate();callback(error);});},removeCustomShortcutKeys:function(shortcuts,callback){var self=this,hasChanged=false,preferences=app.user.get('preferences');if(_.isEmpty(preferences.shortcuts)){callback();return;}
_.each(shortcuts,function(id){if(preferences.shortcuts[id]){hasChanged=true;delete preferences.shortcuts[id];}});if(hasChanged){this.getCurrentSession().deactivate();app.user.updatePreferences(preferences,function(error){self.getCurrentSession().activate();callback(error);});}},getRegisteredGlobalShortcuts:function(){return _.map(this._globalShortcuts,function(shortcut,id){return{id:id,keys:shortcut.keys,description:shortcut.description};});},shouldCallOnFocus:function(key){var shouldCall=false;if(this._currentSession){shouldCall=this._currentSession.shouldCallOnFocus(key)}
if(!shouldCall){shouldCall=findCallOnFocus(this._globalShortcuts,key);}
return shouldCall;},_getShortcutSessionForComponent:function(component){var session,parentLayout=app.utils.getParentLayout(component);if(this._currentSession&&this._currentSession.layout===component){session=this._currentSession;}else{session=_.find(this._savedSessions,function(shortcuts){return(shortcuts&&shortcuts.layout===component);});}
if(_.isUndefined(session)&&parentLayout){session=this._getShortcutSessionForComponent(parentLayout);}
return session;},_isGlobalShortcutKey:function(keys){return!_.every(keys,function(key){return _.every(this._globalShortcuts,function(shortcut){return _.indexOf(shortcut.keys,key)===-1;});},this);},_isGlobalShortcutId:function(id){return!!this._globalShortcuts[id];}},false);var ShortcutSession=function(shortcutIds,layout){this.layout=layout;this._active=false;this._shortcuts={};_.each(shortcutIds,function(id){this._allowShortcut(id);},this);};_.extend(ShortcutSession.prototype,{activate:function(){this.deactivate();this._active=true;_.each(this._shortcuts,function(shortcut,id){var shortcutKey;if(!_.isEmpty(shortcut)){shortcutKey=getShortcutKey(id,shortcut.keys);bindShortcutKeys(shortcutKey,shortcut.func,shortcut.component);}},this);},deactivate:function(){if(this.isActive()){_.each(this._shortcuts,function(shortcuts,id){this._unbindShortcutKeys(id);},this);this._active=false;}},isActive:function(){return this._active;},register:function(shortcut){if(!this._isShortcutAllowed(shortcut.id)||this._isInDashboard(shortcut.component)){return;}
if(!_.isArray(shortcut.keys)){shortcut.keys=[shortcut.keys];}
this.unregister(shortcut.id);this._bindShortcutKeys(shortcut);},unregister:function(id){if(!this._isShortcutAllowed(id)){return;}
if(this.isActive()){this._unbindShortcutKeys(id);}
this._shortcuts[id]={};},getRegisteredShortcuts:function(){var registeredShortcuts=[];_.each(this._shortcuts,function(shortcut,id){if(!_.isEmpty(shortcut)){registeredShortcuts.push({id:id,keys:getShortcutKey(id,shortcut.keys),description:shortcut.description});}});return registeredShortcuts;},shouldCallOnFocus:function(key){var shouldCall=false;if(this.isActive()){shouldCall=findCallOnFocus(this._shortcuts,key);}
return shouldCall;},_bindShortcutKeys:function(shortcut){var shortcutKey;if(!this._isShortcutAllowed(shortcut.id)){return;}
this._shortcuts[shortcut.id].keys=shortcut.keys;this._shortcuts[shortcut.id].func=shortcut.handler;this._shortcuts[shortcut.id].component=shortcut.component;this._shortcuts[shortcut.id].description=shortcut.description;if(shortcut.callOnFocus){this._shortcuts[shortcut.id].callOnFocus=shortcut.callOnFocus;}
if(this.isActive()){shortcutKey=getShortcutKey(shortcut.id,shortcut.keys);bindShortcutKeys(shortcutKey,shortcut.handler,shortcut.component);}},_unbindShortcutKeys:function(id){var keysToUnbind;if(this._isShortcutAllowed(id)){keysToUnbind=getShortcutKey(id,this._shortcuts[id].keys);if(keysToUnbind){unbindShortcutKeys(keysToUnbind);}}},_allowShortcut:function(id){this._shortcuts[id]={};},_isShortcutAllowed:function(id){return!_.isUndefined(this._shortcuts[id]);},_isInDashboard:function(component){var layout=component.layout||(!_.isUndefined(component.view)&&component.view.layout);return(layout.type==='dashlet')||(layout.type==='dashboard');}});})(SUGAR.App);