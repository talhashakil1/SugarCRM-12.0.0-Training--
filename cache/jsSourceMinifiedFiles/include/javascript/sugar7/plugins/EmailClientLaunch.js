(function(app){function getEmailAddress(recipient){var email=app.data.createBean('EmailAddresses');if(recipient.email){if(_.isString(recipient.email)&&!_.isEmpty(recipient.email)){app.logger.warn('EmailClientLaunch Plugin: An email address string was provided. An EmailAddresses bean was '+'expected.');email.set('email_address',recipient.email);}else if(recipient.email instanceof app.Bean&&recipient.email.module==='EmailAddresses'){if(!recipient.email.isNew()||recipient.email.get('email_address')){return recipient.email;}}else{app.logger.warn('EmailClientLaunch Plugin: An unknown email address type was provided. An EmailAddresses bean '+'was expected.');}}
if(recipient.bean&&recipient.bean instanceof app.Bean&&!email.get('email_address')){email.set('email_address',app.utils.getPrimaryEmailAddress(recipient.bean));}
return email;}
app.events.on("app:init",function(){app.plugins.register('EmailClientLaunch',['view','field'],{events:{'click a[data-action="email"]':'launchEmailClient'},launchEmailClient:function(event){event.stopPropagation();var $link=$(event.currentTarget);if(this.useSugarEmailClient()){this.launchSugarEmailClient(this._retrieveEmailOptions($link));}},launchSugarEmailClient:function(options){_.each(['to','cc','bcc'],function(recipientType){var recipients;if(options[recipientType]){recipients=this._retrieveValidRecipients(options[recipientType]);options[recipientType]=_.map(recipients,function(recipient){recipient.set('_link',recipientType);return recipient;});}},this);app.utils.openEmailCreateDrawer('compose-email',options,_.bind(function(context,model){if(model){var controllerContext=app.controller.context;var controllerContextModule=controllerContext.get('module');var links;this.trigger('emailclient:close');if(controllerContextModule==='Emails'&&controllerContext.get('layout')==='records'){controllerContext.reloadData();}else{links=app.utils.getLinksBetweenModules(controllerContextModule,'Emails');_.each(links,function(link){controllerContext.trigger('panel-top:refresh',link.name);});}}},this));},_retrieveValidRecipients:function(recipients){var validRecipients=[];recipients=recipients||[];if(!_.isArray(recipients)){recipients=[recipients];}
_.each(recipients,function(recipient){var validRecipient=app.data.createBean('EmailParticipants');var email=getEmailAddress(recipient);var primary;var isNameErased=false;var isEmailErased=false;if(!email.isNew()){isEmailErased=_.contains(email.get('_erased_fields')||[],'email_address');validRecipient.set({email_addresses:app.utils.deepCopy(email),email_address_id:email.get('id'),email_address:email.get('email_address'),invalid_email:email.get('invalid_email'),opt_out:email.get('opt_out')});}
if(recipient.bean){primary=app.utils.getPrimaryEmailAddress(recipient.bean);isNameErased=app.utils.isNameErased(recipient.bean);if(validRecipient.get('email_address_id')||app.utils.isValidEmailAddress(primary)){validRecipient.set({parent:_.extend({type:recipient.bean.module},app.utils.deepCopy(recipient.bean)),parent_type:recipient.bean.module,parent_id:recipient.bean.get('id'),parent_name:app.utils.getRecordName(recipient.bean)});}}
if(validRecipient.get('parent')&&!isNameErased&&isEmailErased){validRecipient.unset('email_addresses');validRecipient.unset('email_address_id');validRecipient.unset('email_address');validRecipient.unset('invalid_email');validRecipient.unset('opt_out');}
if(validRecipient.get('email_address_id')||validRecipient.get('parent')){validRecipients.push(validRecipient);}},this);return validRecipients;},useSugarEmailClient:function(){var emailClientPreference=app.user.getPreference('email_client_preference');return(emailClientPreference&&emailClientPreference.type==='sugar'&&app.acl.hasAccess('edit','Emails'));},addEmailOptions:function(options){this.emailOptions=this.emailOptions||{};options=options||{};if(options.related&&!options.related.module){options.related=undefined;}
this.emailOptions=_.extend({},this.emailOptions,options);this.emailOptions=_.reduce(this.emailOptions,function(memo,value,key){if(!_.isUndefined(value)){memo[key]=value;}
return memo;},{});},_cloneRelatedModel:function(model){app.logger.warn('_cloneRelatedModel is deprecated and may be removed in Sugar 9.3.0 or later.');return app.data.createBean(model.module,app.utils.deepCopy(model));},_getEmailHref:function(options){if(this.useSugarEmailClient()){return'javascript:void(0)';}else{return this._buildMailToURL(options);}},_buildMailToURL:function(options){var mailToUrl='mailto:',formattedOptions={},queryParams=[];if(options.to){mailToUrl+=this._formatRecipientsToString(options.to);}
formattedOptions.cc=this._formatRecipientsToString(options.cc);formattedOptions.bcc=this._formatRecipientsToString(options.bcc);formattedOptions.subject=options.name;formattedOptions.body=options.description;_.each(['cc','bcc','subject','body'],function(option){var param;if(!_.isEmpty(formattedOptions[option])){param=option+'='+encodeURIComponent(formattedOptions[option]);queryParams.push(param);}});if(!_.isEmpty(queryParams)){mailToUrl=mailToUrl+'?'+queryParams.join('&');}
return mailToUrl;},_formatRecipientsToString:function(recipients){var emails=[];recipients=recipients||[];if(!_.isArray(recipients)){recipients=[recipients];}
_.each(recipients,function(recipient){var email=getEmailAddress(recipient);if(email.get('email_address')){emails.push(email.get('email_address'));}},this);return emails.join(',');},_retrieveEmailOptions:function($link){var optionsFromLink=$link.data()||{};var optionsFromController=this.emailOptions||{};var options={};if(_.isFunction(this._retrieveEmailOptionsFromLink)){optionsFromLink=this._retrieveEmailOptionsFromLink($link);}
options=_.extend(options,optionsFromController,optionsFromLink);return options;},updateEmailLinks:function(){var self=this;var $emailLinks=this.$('a[data-action="email"]');$emailLinks.each(function(){var options=self._retrieveEmailOptions($(this));var href=self._getEmailHref(options);$(this).attr('href',href);});},getContextModel:function(){if(this.view&&_.isFunction(this.view.getContextModel)){return this.view.getContextModel();}else{var context=this.context.parent||this.context||{};return context?context.get('model'):{};}},onAttach:function(){var updateEmailOptions=_.bind(function(model){var options={};if(_.isFunction(this.emailOptionTo)){options.to=this.emailOptionTo(model);}
if(_.isFunction(this.emailOptionCc)){options.cc=this.emailOptionCc(model);}
if(_.isFunction(this.emailOptionBcc)){options.bcc=this.emailOptionBcc(model);}
if(_.isFunction(this.emailOptionSubject)){options.name=this.emailOptionSubject(model);}
if(_.isFunction(this.emailOptionDescription)){options.description=this.emailOptionDescription(model);}
if(_.isFunction(this.emailOptionDescriptionHtml)){options.description_html=this.emailOptionDescriptionHtml(model);}
if(_.isFunction(this.emailOptionAttachments)){options.attachments=this.emailOptionAttachments(model);}
if(_.isFunction(this.emailOptionRelated)){options.related=this.emailOptionRelated(model);}
if(_.isFunction(this.emailOptionTeams)){options.team_name=this.emailOptionTeams(model);}
this.addEmailOptions(options);},this);this.on('init',function(){var self=this;var model=this.getContextModel();var events=['change','change:from_collection','change:to_collection','change:cc_collection','change:bcc_collection','change:attachments_collection'];var onChange=_.debounce(function(model){updateEmailOptions(model);self.render();},200);if(model instanceof app.Bean){this.listenTo(model,events.join(' '),onChange);}
updateEmailOptions(model);},this);this.on('render',this.updateEmailLinks,this);}});});})(SUGAR.App);