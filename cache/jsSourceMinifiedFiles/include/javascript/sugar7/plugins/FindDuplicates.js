(function(app){app.events.on('app:init',function(){var createDuplicateCollection,duplicateCheckIsDisabledHandler;duplicateCheckIsDisabledHandler=function(collection,options){var errorMessage;options=options||{};collection.dataFetched=true;errorMessage=app.lang.get('ERR_DUPLICATE_CHECK_IS_DISABLED',collection.module,{module:collection.module});collection.trigger('duplicatecheck:error',new Error(errorMessage));if(options.success){options.success(collection,undefined,{});}};createDuplicateCollection=function(dupeCheckModel,module){var collection=app.data.createBeanCollection(module||this.module),collectionSync=collection.sync;_.extend(collection,{dupeCheckModel:dupeCheckModel,sync:function(method,model,options){var checkForDuplicates,metadata;options=options||{};checkForDuplicates=_.isEmpty(model.filterDef);metadata=app.metadata.getModule(this.module);if(checkForDuplicates){options.endpoint=_.bind(this.endpoint,this);}
if(checkForDuplicates&&!metadata.dupCheckEnabled){duplicateCheckIsDisabledHandler(this,options);}else{collectionSync(method,model,options);}},endpoint:function(method,model,options,callbacks){var url=app.api.buildURL(this.module,'duplicateCheck');var data=app.data.getEditableFields(this.dupeCheckModel);return app.api.call('create',url,data,callbacks);}});return collection;};app.plugins.register('FindDuplicates',['view'],{onAttach:function(component,plugin){this.on('init',function(){this.context.on('button:find_duplicates_button:click',this.findDuplicatesClicked,this);});},findDuplicatesClicked:function(){this.findDuplicates(this.model);},findDuplicates:function(dupeCheckModel){app.drawer.open({layout:'find-duplicates',context:{layoutName:'records',dupelisttype:'dupecheck-list-multiselect',collection:this.createDuplicateCollection(dupeCheckModel),model:app.data.createBean(this.module)}},_.bind(function(refresh,primaryRecord){if(refresh&&dupeCheckModel.id===primaryRecord.id){app.router.refresh();}else if(refresh){app.navigate(this.context,primaryRecord);}},this));},createDuplicateCollection:createDuplicateCollection,onDetach:function(component,plugin){this.context.off('button:find_duplicates_button:click',this.findDuplicatesClicked,this);}});app.plugins.register('FindDuplicates',['layout'],{createDuplicateCollection:createDuplicateCollection});});})(SUGAR.App);