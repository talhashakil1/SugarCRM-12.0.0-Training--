/* NAVBAR
  ----------------*/

/* twitter-bootstrap import START */

// COMMON STYLES
// -------------

// Base class and wrapper
.navbar {
  overflow: visible;
}

.navbar-inner {
  // Prevent floats from breaking the navbar
  .clearfix();
}

// Set width to auto for default container
// We then reset it for fixed navbars in the #gridSystem mixin
.navbar .container {
  width: auto;
}

// Override the default collapsed state
.nav-collapse.collapse {
  height: auto;
  overflow: visible;
}

// Brand: website or project name
// -------------------------
.navbar .brand {
  float: left;
  display: block;
  // Vertically center the text given @navbarHeight
  padding: ((@navbarHeight - @baseLineHeight) / 2) 20px ((@navbarHeight - @baseLineHeight) / 2);
  margin-left: -20px; // negative indent to left-align the text down the page
  font-size: 20px;
  font-weight: 200;
  color: @navbarBrandColor;
  text-shadow: 0 1px 0 @navbarBackgroundHighlight;

  &:hover {
    text-decoration: none;
  }
}

// Plain text in topbar
// -------------------------
.navbar-text {
  margin-bottom: 0;
  line-height: @navbarHeight;
  color: @navbarText;
}

// Janky solution for now to account for links outside the .nav
// -------------------------
.navbar-link {
  color: @navbarLinkColor;

  &:hover {
    color: @navbarLinkColorHover;
  }
}

// Dividers in navbar
// -------------------------
.navbar .divider-vertical {
  height: @navbarHeight;
  margin: 0 9px;
  border-left: 1px solid @navbarBackground;
  border-right: 1px solid @navbarBackgroundHighlight;
}

// Buttons in navbar
// -------------------------
.navbar .btn,
.navbar .btn-group {
  .navbarVerticalAlign(30px); // Vertically center in navbar
}

.navbar .btn-group .btn,
.navbar .input-prepend .btn,
.navbar .input-append .btn {
  margin-top: 0; // then undo the margin here so we don't accidentally double it
}

// Navbar search
// -------------------------
.navbar-search {
  position: relative;
  .navbarVerticalAlign(30px); // Vertically center in navbar


  margin-bottom: 0;

  .search-query {
    margin-bottom: 0;
    font-size: 13px;
  }
}

// Fixed navbar
// -------------------------

.banner-shifted {
  .navbar-fixed-top {
    top: @bannerHeight;
  }

  .navbar .megamenu > .dropdown .dropdown-menu {
    top: @bannerHeight + 44px;
  }

  .navbar-search .quicksearch-modulelist-wrapper .module-dropdown-list {
    top: @bannerHeight + 50px;
  }
}

// NAVIGATION
// ----------

.navbar .nav {
  position: relative;
  left: 0;
  display: block;
  float: left;
  margin: 0 10px 0 0;
}

.navbar .nav.pull-right {
  float: right; // redeclare due to specificity
  margin-right: 0; // remove margin on float right nav
}

// Links
.navbar .nav > li > a {
  float: none;
  // Vertically center the text given @navbarHeight
  padding: ((@navbarHeight - @baseLineHeight) / 2) 15px ((@navbarHeight - @baseLineHeight) / 2);
  color: @navbarLinkColor;
  text-decoration: none;
  text-shadow: 0 1px 0 @navbarBackgroundHighlight;
}

.navbar .nav .dropdown-toggle .caret {
  margin-top: 8px;
}

// Hover
.navbar .nav > li > a:focus,
.navbar .nav > li > a:hover {
  background-color: @navbarLinkBackgroundHover; // "transparent" is default to differentiate :hover from .active
  color: @navbarLinkColorHover;
  text-decoration: none;
}

// Active nav items
.navbar .nav > .active > a,
.navbar .nav > .active > a:hover,
.navbar .nav > .active > a:focus {
  color: @navbarLinkColorActive;
  text-decoration: none;
  background-color: @navbarLinkBackgroundActive;
  box-shadow: inset 0 3px 8px @gray10;
}

// Navbar button for toggling navbar items in responsive layouts
// These definitions need to come after '.navbar .btn'
.navbar .btn-navbar {
  display: none;
  float: right;
  padding: 7px 10px;
  margin-left: 5px;
  margin-right: 5px;
  box-shadow: inset 0 1px 0 fade(@white, 10%), 0 1px 0 fade(@white, 7.5%);
}

.navbar .btn-navbar .fa-bar {
  display: block;
  width: 18px;
  height: 2px;
  background-color: @gray20;
  border-radius: 1px;
  box-shadow: 0 1px 0 fade(@black, 25%);
}

.btn-navbar .fa-bar + .fa-bar {
  margin-top: 3px;
}

// Dropdown menus
// --------------

// Menu position and menu carets
.navbar .nav > li > .dropdown-menu {
  &::before {
    content: '';
    display: inline-block;
    border-left: 7px solid @transparent;
    border-right: 7px solid @transparent;
    border-bottom: 7px solid @borderColor;
    border-bottom-color: @dropdownBorder;
    position: absolute;
    top: -7px;
    left: 9px;
  }

  &::after {
    content: '';
    display: inline-block;
    border-left: 6px solid @transparent;
    border-right: 6px solid @transparent;
    border-bottom: 6px solid @dropdownBackground;
    position: absolute;
    top: -6px;
    left: 10px;
  }
}

// Caret should match text color on hover
.navbar .nav li.dropdown > a:hover .caret {
  border-top-color: @navbarLinkColorActive;
  border-bottom-color: @navbarLinkColorActive;
}

// Remove background color from open dropdown
.navbar .nav li.dropdown.open > .dropdown-toggle,
.navbar .nav li.dropdown.active > .dropdown-toggle,
.navbar .nav li.dropdown.open.active > .dropdown-toggle {
  background-color: @navbarLinkBackgroundActive;
  color: @navbarLinkColorActive;
}

.navbar .nav li.dropdown > .dropdown-toggle .caret {
  border-top-color: @navbarLinkColor;
  border-bottom-color: @navbarLinkColor;
}

.navbar .nav li.dropdown.open > .dropdown-toggle .caret,
.navbar .nav li.dropdown.active > .dropdown-toggle .caret,
.navbar .nav li.dropdown.open.active > .dropdown-toggle .caret {
  border-top-color: @navbarLinkColorActive;
  border-bottom-color: @navbarLinkColorActive;
}

// Right aligned menus need alt position
.navbar .pull-right > li > .dropdown-menu,
.navbar .nav > li > .dropdown-menu.pull-right {
  left: auto;
  right: 0;

  &::before {
    left: auto;
    right: 12px;
  }

  &::after {
    left: auto;
    right: 13px;
  }

  .dropdown-menu {
    left: auto;
    right: 100%;
    margin-left: 0;
    margin-right: -1px;
  }
}

/* twitter-bootstrap import END */

.navbar {
  &.navbar-fixed-top {
    left: 0;
    z-index: (@zindexFixedNavbar + 2);
  }

  // General layout
  // ==============
  .navbar-inner {
    min-height: 0;
  }

  .nav-collapse {
    > div {
      display: flex;
      align-items: center;

      &.module-list {
        flex: 1;

        .dropdown-menu {
          max-width: 240px;
        }
      }
    }
  }

  .nav {
    margin: 0;
  }

  .btn,
  .btn-group {
    margin: 0;
  }

  .fa {
    font-size: 14px;
  }

  .btn-group:hover > .routeLink,
  .btn-group > .routeLink:focus {
    color: @navbarLinkColorActive !important;
  }

  .btn-group:hover > .btn .fa,
  .btn-group > .btn:focus .fa {
    color: @navbarLinkColorActive;
  }
}

// Nav links (both module list and other)
// ======================================
.megamenu {
  > .dropdown {
    &.active {
      .btn-group:not(.open) {
        .dropdown-toggle:not(.cube) {
          color: @navbarLinkColorActive;
          border-radius: 0 !important;
          outline: none;

          &:focus {
            .tab-focus-light();
          }
        }
      }
    }

    /*This is the actual content in nav item*/
    .btn-group {
      display: inline-flex;
      align-items: center;
      margin: 0;

      &.home {
        display: inline-block;
        width: 44px;
        max-width: 44px;
      }

      /*This is the link text or image*/
      & > .dropdown-toggle {
        margin: 0;
        padding: 0;
        font-weight: normal;
        border: none;
        text-shadow: none;
        box-sizing: content-box;

        &:hover {
          text-decoration: none;

          .sicon {
            color: @sicon-hover-color;
          }
        }

        &:active {
          box-shadow: none !important;
          border-color: transparent;
          background: none;
        }
      }

      /*This is all buttons not in the mega menu*/
      &:not(.open) {
        & > .btn:focus,
        .btn.module-name:focus {
          .tab-focus-light();
        }

        & > .btn.module-name:focus {
          outline-offset: 3px;
        }

        & > .btn:active,
        .btn:active:focus {
          outline-width: 0;
        }
      }

      &.open {
        .dropdown-toggle {
          background: none;
          box-shadow: none;

          &:hover {
            background: none;
            text-decoration: none;
          }
        }
      }
    }

    /*Menu position and menu carets*/
    .dropdown-menu {
      position: fixed;
      left: auto;
      right: auto;
      max-height: ~"-moz-calc(100% - 100px)";
      max-height: ~"-webkit-calc(100% - 100px)";
      max-height: ~"calc(100% - 100px)";
      margin-top: 0;
      padding-top: 0;
      overflow-y: auto;
      overflow-x: hidden;
      background: none;
      min-width: 160px;

      &.pull-right {
        left: auto;
        right: 0;
      }

      & > ul {
        background: @white;
      }

      &::before {
        border-bottom-color: fade(@black, 20%);
      }

      li.divider {
        border-bottom: none;
      }

      li.divider + li a {
        border-top: @borderWidget;
      }

      li.hidden {
        display: none;
      }

      li.megamenu-dropdown-item-container {
        .megamenu-dropdown-item {
          display: flex;
          flex-direction: row;
          align-items: center;
          padding: 8px 10px;
          color: @textColor;
          background-color: @dropdownBackground;

          .sicon {
            margin-right: 8px;
          }

          .label {
            text-indent: 0;
          }

          &.module-list-link {
            text-indent: 0;
            padding-right: 20px;
          }

          &:focus,
          &:hover {
            color: @dropdownLinkColor;
            background: @dropdownLinkBackgroundHover;

            i.sicon,
            i.fa {
              color: @dropdownLinkColor;
            }
          }

          &:active {
            color: @dropdownLinkColorActive;
            background: @dropdownLinkBackgroundActive;

            i.sicon,
            i.fa {
              color: @dropdownLinkColorActive;
            }
          }
        }
      }
    }

    button.toggle-recents {
      width: 100%;
      text-align: left;
    }
  }
}

// Styling specific to module list
// ======================================
.module-list .megamenu {
  max-height: 44px;
  white-space: nowrap;
  display: flex;

  > .dropdown {
    float: none;
    display: flex;

    &.hidden {
      display: none;
    }

    &.more {
      .btn-group {
        .dropdown-toggle {
          .ml-0();
          .p-2();
        }
      }
    }

    &.hidden.more {
      display: inline-block; /* UIUX-1610 */
    }

    .btn-group {
      .dropdown-toggle {
        margin-left: 2px;
        .p-1();

        .sicon {
          vertical-align: top;
        }
      }

      /*cube container*/
      &.home {
        .dropdown-menu {
          left: 0;
          right: auto;
        }

        /*img*/
        .cube {
          z-index: 2000;
          padding: 3px;

          &.hide {
            display: none;
          }

          &:hover {
            text-decoration: none;
          }

          img {
            height: 22px;
            width: 22px;
          }
        }
      }
    }

    // module name link buttons
    .module-name {
      color: @textColor;
      padding: 0;

      &:focus,
      &:hover {
        text-decoration: none;
      }
    }

    &[data-module="Forecasts"] {
      .btn-group {
        padding-right: 14px;
      }
    }
  }
}

#userActions {
  .dropdown-menu {
    min-width: 0;

    ul.dropdown-insert {
      display: none;
    }
  }

  & > .btn-group {
    padding-right: 8px;
  }

  .dropdown-toggle {
    .avatar {
      min-width: 26px;
    }

    .fa-user {
      width: 26px;
      height: 26px;
      line-height: 26px;
      top: 0;
      font-size: 16px;
    }

    .sicon {
      vertical-align: middle;
    }
  }

  .profileactions-change-password {
    .fa-lock {
      text-indent: -9px;
    }
  }

  .profileactions-reset-mfa {
    .fa-lock {
      text-indent: -9px;
    }
  }

  .profileactions-profile {
    > a {
      > span {
        line-height: 12px;
        margin-right: 4px;
      }
    }
  }
}

// A temporary fix because there's an entangled web of selectors around dropdown-toggles and it's not going to be
// refactored at the moment. This is much easier.
#createList {
  .btn-group {
    .dropdown-toggle {
      .p-2();
    }
  }
}

/* NEW SKIN START */

// Nav links (both module list and other)
// ======================================

.navbar {
  .nav-collapse > div.module-list .nav .dropdown {
    > .btn-group:not(.home) {
      .dropdown-menu {
        /* override */
        margin-left: -8px;
      }
    }

    &.more .btn-group.open .dropdown-menu {
      margin-left: -8px;
    }
  }

  .megamenu {
    > .dropdown {
      &:hover {
        .btn-group {
          .bg-tab-background-hover-color();
        }
      }

      .btn-group.open,
      &.active .btn-group:not(.home) {
        .active-tab();
        .pb-1();
      }

      /*Menu position and menu carets*/
      .dropdown-menu {
        /* override */
        top: 44px;
      }
    }
  }
}

/* NEW SKIN END */

// Dark mode settings
// ======================================
// Change the SugarCRM black cube to white for dark theme
body.sugar-dark-theme {
  .module-list {
    .megamenu > .dropdown {
      .btn-group.home .cube img {
        filter: invert(100%) saturate(100%) brightness(115%);
      }
    }
  }
}
