/* MIXINS
  ----------------*/

/* twitter-bootstrap import START */

// TWITTER-BOOTSTRAP MIXINS
// --------------------------------------------------

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
.clearfix {
  &::before,
  &::after {
    display: table;
    content: "";
    // Fixes Opera/contenteditable bug:
    // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
    line-height: 0;
  }

  &::after {
    clear: both;
  }
}

// Webkit-style focus
// ------------------
.tab-focus() {
  // Default
  outline: 3px auto @ocean;
  // Firefox
  outline: 3px auto -moz-mac-focusring;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: 0;
}

// Center-align a block level element
// ----------------------------------
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Sizing shortcuts
// -------------------------
.size(@height, @width) {
  width: @width;
  height: @height;
}
.square(@size) {
  .size(@size, @size);
}

// Placeholder text
// -------------------------
.placeholder(@color: @placeholderText) {
  &::-moz-placeholder {
    color: @color;
  }

  &:-ms-input-placeholder {
    color: @color;
  }

  &::-webkit-input-placeholder {
    color: @color;
  }
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// CSS image replacement
// -------------------------
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

// FONTS
// --------------------------------------------------

#font {
  #family {
    .serif() {
      font-family: @serifFontFamily;
    }
    .sans-serif() {
      font-family: @sansFontFamily;
    }
    .monospace() {
      font-family: @monoFontFamily;
    }
  }
  .shorthand(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    font-size: @size;
    font-weight: @weight;
    line-height: @lineHeight;
  }
  .serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .sans-serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .sans-serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .monospace(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .monospace;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
}

// FORMS
// --------------------------------------------------

// Block level inputs
.input-block-level {
  display: block;
  width: 100%;
  min-height: @inputHeight; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  box-sizing: border-box; // Makes inputs behave like true block-level elements
}

// Mixin for form field states
.formFieldState(@textColor: @gray80, @borderColor: @gray60, @backgroundColor: @gray20) {
  // Set the text color
  .control-label,
  .help-block,
  .help-inline {
    color: @textColor;
  }
  // Style inputs accordingly
  .checkbox,
  .radio,
  input,
  select,
  textarea {
    color: @textColor;
  }

  input,
  select,
  textarea {
    border-color: @borderColor;
    box-shadow: inset 0 1px 1px fade(@black, 7.5%); // Redeclare so transitions work
    &:focus {
      border-color: @borderColorFocus;
      box-shadow: inset 0 1px 1px fade(@black, 7.5%), 0 0 6px @borderColorLight;
    }
  }
  // Give a small background color for input-prepend/-append
  .input-prepend .add-on,
  .input-append .add-on {
    color: @textColor;
    background-color: @backgroundColor;
    border-color: @textColor;
  }
}

// CSS3 PROPERTIES
// --------------------------------------------------

// User select
// For selecting text on the page
.user-select(@select) {
  -webkit-user-select: @select;
  -moz-user-select: @select;
  -ms-user-select: @select;
  -o-user-select: @select;
  user-select: @select;
}

// Resize anything
.resizable(@direction) {
  resize: @direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}

// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
#translucent {
  .background(@color: @white, @alpha: 1) {
    background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
  }
  .border(@color: @white, @alpha: 1) {
    border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    background-clip: padding-box;
  }
}

// Gradient Bar Colors for buttons and alerts
.gradientBar(@primaryColor, @secondaryColor, @textColor: @white, @textShadow: 0 -1px 0 fade(@black, 25%)) {
  color: @textColor;
  text-shadow: @textShadow;
  #gradient > .vertical(@primaryColor, @secondaryColor);

  border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
  border-color: fade(@black, 10%) fade(@black, 10%) fadein(fade(@black, 10%), 15%);
}

// Gradients
#gradient {
  .horizontal(@startColor: @gray80, @endColor: @gray90) {
    background-color: @endColor;
    background-image: linear-gradient(to right, @startColor, @endColor);
    background-repeat: repeat-x;
  }
  .vertical(@startColor: @gray80, @endColor: @gray90) {
    background-color: mix(@startColor, @endColor, 60%);
    background-image: linear-gradient(to bottom, @startColor, @endColor);
    background-repeat: repeat-x;
  }
  .directional(@startColor: @gray80, @endColor: @gray90, @deg: 45deg) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: linear-gradient(@deg, @startColor, @endColor);
  }
  .vertical-three-colors(@startColor: @teal, @midColor: @purple, @colorStop: 50%, @endColor: @red) {
    background-color: mix(@midColor, @endColor, 80%);
    background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-repeat: no-repeat;
  }
  .radial(@innerColor: @gray80, @outerColor: @gray90) {
    background-color: @outerColor;
    background-image: radial-gradient(circle, @innerColor, @outerColor);
    background-repeat: no-repeat;
  }
  .striped(@color: @gray80, @angle: 45deg) {
    background-color: @color;
    background-image: linear-gradient(@angle, fade(@white, 15%) 25%, transparent 25%, transparent 50%, fade(@white, 15%) 50%, fade(@white, 15%) 75%, transparent 75%, transparent);
  }
}

// COMPONENT MIXINS
// --------------------------------------------------

// Horizontal dividers
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
.nav-divider(@top: @gray20, @bottom: @white) {
  height: 1px;
  margin: ((@baseLineHeight / 2) - 1) 1px; // 8px 1px
  overflow: hidden;
  background-color: @top;
  border-bottom: 1px solid @bottom;
}

// Button backgrounds
// ------------------
.buttonBackground(@startColor, @endColor, @textColor: @white, @textShadow: 0 -1px 0 fade(@black, 25%)) {
  .gradientBar(@startColor, @endColor, @textColor, @textShadow);

  // in these cases the gradient won't cover the background, so we override
  &:hover,
  &:active,
  &.active,
  &.disabled,
  &[disabled] {
    color: @textColor;
    background-color: @endColor;
  }
}

// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `.navbarVerticalAlign(30px);` to calculate the appropriate top margin.
.navbarVerticalAlign(@elementHeight) {
  margin-top: (@navbarHeight - @elementHeight) / 2;
}

// Grid System
// -----------

// Centered container element
.container-fixed() {
  margin-right: auto;
  margin-left: auto;
  .clearfix();
}

// Table columns
.tableColumns(@columnSpan: 1) {
  float: none; // undo default grid column styles
  width: ((@gridColumnWidth) * @columnSpan) + (@gridGutterWidth * (@columnSpan - 1)) - 16; // 16 is total padding on left and right of table cells
  margin-left: 0; // undo default grid column styles
}

// Make a Grid
// Use .makeRow and .makeColumn to assign semantic layouts grid system behavior
.makeRow() {
  margin-left: @gridGutterWidth * -1;
  .clearfix();
}
.makeColumn(@columns: 1, @offset: 0) {
  float: left;
  margin-left: (@gridColumnWidth * @offset) + (@gridGutterWidth * (@offset - 1)) + (@gridGutterWidth * 2);
  width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
}

/* twitter-bootstrap import END */

.dropdownMinWidth(@columnSpan: 3) {
  float: none; // undo default grid column styles
  min-width: ((@gridColumnWidth) * @columnSpan) + (@gridGutterWidth * (@columnSpan - 1)) + 1;
  margin-left: 0; // undo default grid column styles
}

.caret-top(@afterLeftCaretPos: 10px, @beforeLeftCaretPos: 9px,@afterRightCaretPos: auto, @beforeRightCaretPos: auto) {
  &::after {
    content: '';
    display: inline-block;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-bottom: 6px solid @white;
    position: absolute;
    top: -6px;
    left: @afterLeftCaretPos;
    right: @afterRightCaretPos;
  }

  &::before {
    content: '';
    display: inline-block;
    border-left: 7px solid transparent;
    border-right: 7px solid transparent;
    border-bottom: 7px solid @gray20;
    border-bottom-color: fade(@black, 20%);
    position: absolute;
    top: -7px;
    left: @beforeLeftCaretPos;
    right: @beforeRightCaretPos;
  }

  &.bottom-up {
    &::after {
      border-top: 6px solid @white;
      border-bottom: none;
      top: auto;
      left: @afterLeftCaretPos;
      right: @afterRightCaretPos;
    }

    &::before {
      border-top: 7px solid @white;
      border-bottom: none;
      top: auto;
      left: @beforeLeftCaretPos;
      right: @beforeRightCaretPos;
    }
  }
}

// CSS3 PROPERTIES
// --------------------------------------------------

.grayscale(@val) {
  -ms-filter: grayscale(@val);
  filter: grayscale(@val);
}

.brightness(@val) {
  -ms-filter: brightness(@val);
  filter: brightness(@val);
}

.outline(@val) {
  outline: @val;
}

/* Headerpane shadows */
.headerpane-shadow {
  content: "";
  position: absolute;
  bottom: -5px;
  width: 100%;
  width: calc(~"100% + 1px");
  height: 5px;
  left: 0;
  top: auto;
  #gradient > .vertical(fade(@black, 10%), @white);

  background-color: @transparent; /* gradient function form twitter bootstrap adds background color, we needn't that fallback for shadow */
}

.fontawesome {
  width: 14px;
  height: 14px;
  display: inline-block;
  line-height: 14px;
  font-size: 14px;
  background: none;
  font-family: FontAwesome;
  font-weight: normal;
  -webkit-font-smoothing: antialiased;

  &::before {
    text-decoration: inherit;
    display: inline-block;
    speak: none;
  }
}

.information-underline {
  border-bottom: 1px dotted @black;
  cursor: pointer;

  &:hover {
    border-bottom: 1px solid @black;
  }
}

.tab-focus-light() {
  // Default
  outline: dotted 1px @ocean;
  outline-offset: -2px;
  // Firefox
  outline-color: -moz-mac-focusring;
  // Webkit
  outline-color: -webkit-focus-ring-color;
}
