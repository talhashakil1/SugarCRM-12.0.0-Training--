{{!--
/*
 * Your installation or use of this SugarCRM file is subject to the applicable
 * terms available at
 * http://support.sugarcrm.com/Resources/Master_Subscription_Agreements/.
 * If you do not agree to all of the applicable terms or do not have the
 * authority to bind the entity as an authorized representative, then do not
 * install or use this SugarCRM file.
 *
 * Copyright (C) SugarCRM Inc. All rights reserved.
 */
--}}
<!-- Slider
================================================== -->
<section id="slider">
  <div class="page-header">
    <p class="lead">{{{meta.description}}}</p>
  </div>

  <div class="row-fluid">
    <div class="span3 columns">
      <h3>About noUiSlider</h3>
      <p>noUiSlider is a little jQuery plugin that makes really cool (double) range sliders. Every slider can have two handles to select a range, a fixed minimum or maximum can be set to select a limit, or two handles can be used, to simply pick some points. </p>
      <p>The jquery.nouislider.js plugin is included in the default build of SugarCRM. [<a href="http://refreshless.com/nouislider/" target="_blank" rel="nofollow noopener noreferrer"><i class="sicon sicon-document"></i> Docs</a>]</p>
    </div>
    <div class="span9 columns">
      <h2>SugarCRM Example</h2>
      <div class="well" id="test_slider">
      </div>
      <div class="row-fluid record">
        <div class="span6">
          <label>Min: </label><input id="test_slider_min" value="0">
        </div>
        <div class="span6">
          <label>Max: </label><input id="test_slider_max" value="100">
        </div>
      </div>
      <hr>

      <h2>Using noUiSlider</h2>

      <h3>Markup</h3>
<pre class="prettyprint linenums">
&lt;div id="test_slider" class="noUiSlider"&gt;&lt;/div&gt;
&lt;input id="test_slider_min" value="0"&gt;
&lt;input id="test_slider_max" value="100"&gt;
</pre>

      <h3>JavaScript</h3>
<pre class="prettyprint linenums">
var fieldSettings = {
    view: this,
    def: { OPTIONS },
    viewName: 'edit',
    context: this.context,
    module: this.module,
    model: this.model,
},
rangeField = app.view.createField(fieldSettings);

this.$('#test_slider').append(rangeField.el);
rangeField.render();

rangeField.sliderDoneDelegate = function(minField, maxField) {
    return function(value) {
        minField.val(value.min);
        maxField.val(value.max);
    };
}(this.$('#test_slider_min'), this.$('#test_slider_max'));
</pre>

      <h3>Options</h3>
      <table class="table table-bordered table-striped">
        <tbody>
          <tr>
            <th>Name</th>
            <th>Parameter type</th>
            <th>Possible parameter values</th>
            <th>Description</th>
          </tr>
          <tr>
            <td>name</td>
            <td>[VARCHAR]</td>
            <td></td>
            <td>Name of field in model.</td>
          </tr>
          <tr>
            <td>type</td>
            <td>[VARCHAR]</td>
            <td>"range"</td>
            <td>Field type.</td>
          </tr>
          <tr>
            <td>view</td>
            <td>[VARCHAR]</td>
            <td>"edit", "detail"</td>
            <td>Display mode for field.</td>
          </tr>
          <tr>
            <td>sliderType</td>
            <td>[VARCHAR]</td>
            <td>"single", "upper", "lower", "double", "connected"</td>
            <td>Type of knobs to display in slider.</td>
          </tr>
          <tr>
            <td>minRange, maxRange</td>
            <td>[INT]</td>
            <td>Any value between 0 an 100. The value will be corrected to fit within the edges of the slider. The upper knob will not be place below and lower knob, and vice versa.</td>
            <td>The position to move a knob to.</td>
          </tr>
          <tr>
            <td>default</td>
            <td>[BOOLEAN]</td>
            <td>true, false</td>
            <td></td>
          </tr>
          <tr>
            <td>enabled</td>
            <td>[BOOLEAN]</td>
            <td>true, false</td>
            <td>Whether or not the control is enabled.</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</section>
